{"version":3,"sources":["Event.js","EventList.js","CitySearch.js","mock-data.js","NumberOfEvents.js","api.js","App.js","index.js"],"names":["Event","state","details","showDetails","setState","formatDate","date","month","getMonth","slice","day","getDate","year","getFullYear","hour","getHours","minute","getMinutes","join","startDate","Date","this","props","events","start","dateTime","endDate","end","className","summary","onClick","description","Component","EventList","console","log","numberOfEvents","map","event","key","id","CitySearch","query","suggestions","handleInputChanged","value","target","locations","filter","location","toUpperCase","indexOf","handleItemClicked","suggestion","type","onChange","mockData","kind","etag","status","htmlLink","created","updated","creator","email","self","organizer","timeZone","recurringEventId","originalStartTime","iCalUID","sequence","reminders","useDefault","eventType","NumberOfEvents","eventCount","onNumberOfEventsChange","extractLocations","Set","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e559c932.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\n\r\nclass Event extends Component {\r\n  state = {\r\n    details: false,\r\n  };\r\n\r\n  showDetails = () => {\r\n    this.setState({\r\n      details: !this.state.details,\r\n    });\r\n  };\r\n\r\n  formatDate = (date) => {\r\n    let month = (\"0\" + (date.getMonth() + 1)).slice(-2),\r\n      day = \"\" + (\"0\" + date.getDate()).slice(-2),\r\n      year = date.getFullYear(),\r\n      hour = (\"0\" + (date.getHours() - 2)).slice(-2),\r\n      minute = (\"0\" + date.getMinutes()).slice(-2);\r\n\r\n    return `${[day, month, year].join(\"/\")} ${[hour, minute].join(\":\")} GMT`;\r\n  };\r\n\r\n  render() {\r\n    let startDate = new Date(this.props.events.start.dateTime);\r\n    let endDate = new Date(this.props.events.end.dateTime);\r\n\r\n    return (\r\n      <div className=\"event\">\r\n        <p className=\"dates\">{`${this.formatDate(\r\n          startDate\r\n        )} - ${this.formatDate(endDate)}`}</p>\r\n        <p className=\"summary\">{`${this.props.events.summary}`}</p>\r\n        <button className=\"details-button\" onClick={this.showDetails}>\r\n          Details\r\n        </button>\r\n        {this.state.details && (\r\n          <div className=\"details\">\r\n            <p className=\"summary\">{`${this.props.events.description}`}</p>\r\n          </div>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default Event;\r\n","import React, { Component } from \"react\";\r\nimport Event from \"./Event\";\r\n\r\nclass EventList extends Component {\r\n  render() {\r\n    const { events } = this.props;\r\n    return (\r\n      <ul className=\"EventList\">\r\n        {console.log(this.props.numberOfEvents)}\r\n        {events.slice(0, this.props.numberOfEvents).map((event) => (\r\n          <li key={event.id}>\r\n            <Event events={event} />\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    );\r\n  }\r\n}\r\n\r\nexport default EventList;\r\n","import React, { Component } from \"react\";\r\n\r\nclass CitySearch extends Component {\r\n  state = {\r\n    query: \"\",\r\n    suggestions: [],\r\n  };\r\n\r\n  handleInputChanged = (event) => {\r\n    const value = event.target.value;\r\n    const suggestions = this.props.locations.filter((location) => {\r\n      return location.toUpperCase().indexOf(value.toUpperCase()) > -1;\r\n    });\r\n    this.setState({\r\n      query: value,\r\n      suggestions,\r\n    });\r\n  };\r\n\r\n  handleItemClicked = (suggestion) => {\r\n    this.setState({\r\n      query: suggestion,\r\n      suggestions: [],\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"CitySearch\">\r\n        <input\r\n          type=\"text\"\r\n          className=\"city\"\r\n          value={this.state.query}\r\n          onChange={this.handleInputChanged}\r\n        />\r\n        <ul className=\"suggestions\">\r\n          {this.state.suggestions.map((suggestion) => (\r\n            <li\r\n              key={suggestion}\r\n              onClick={() => this.handleItemClicked(suggestion)}\r\n            >\r\n              {suggestion}\r\n            </li>\r\n          ))}\r\n          <li>\r\n            <b>See all cities</b>\r\n          </li>\r\n        </ul>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default CitySearch;\r\n","const mockData = [\r\n  {\r\n    kind: \"calendar#event\",\r\n    etag: '\"3181161784712000\"',\r\n    id: \"4eahs9ghkhrvkld72hogu9ph3e_20200519T140000Z\",\r\n    status: \"confirmed\",\r\n    htmlLink:\r\n      \"https://www.google.com/calendar/event?eid=NGVhaHM5Z2hraHJ2a2xkNzJob2d1OXBoM2VfMjAyMDA1MTlUMTQwMDAwWiBmdWxsc3RhY2t3ZWJkZXZAY2FyZWVyZm91bmRyeS5jb20\",\r\n    created: \"2020-05-19T19:17:46.000Z\",\r\n    updated: \"2020-05-27T12:01:32.356Z\",\r\n    summary: \"Learn JavaScript\",\r\n    description:\r\n      \"Have you wondered how you can ask Google to show you the list of the top ten must-see places in London? And how Google presents you the list? How can you submit the details of an application? Well, JavaScript is doing these. :) \\n\\nJavascript offers interactivity to a dull, static website. Come, learn JavaScript with us and make those beautiful websites.\",\r\n    location: \"London, UK\",\r\n    creator: {\r\n      email: \"fullstackwebdev@careerfoundry.com\",\r\n      self: true,\r\n    },\r\n    organizer: {\r\n      email: \"fullstackwebdev@careerfoundry.com\",\r\n      self: true,\r\n    },\r\n    start: {\r\n      dateTime: \"2020-05-19T16:00:00+02:00\",\r\n      timeZone: \"Europe/Berlin\",\r\n    },\r\n    end: {\r\n      dateTime: \"2020-05-19T17:00:00+02:00\",\r\n      timeZone: \"Europe/Berlin\",\r\n    },\r\n    recurringEventId: \"4eahs9ghkhrvkld72hogu9ph3e\",\r\n    originalStartTime: {\r\n      dateTime: \"2020-05-19T16:00:00+02:00\",\r\n      timeZone: \"Europe/Berlin\",\r\n    },\r\n    iCalUID: \"4eahs9ghkhrvkld72hogu9ph3e@google.com\",\r\n    sequence: 0,\r\n    reminders: {\r\n      useDefault: true,\r\n    },\r\n    eventType: \"default\",\r\n  },\r\n  {\r\n    kind: \"calendar#event\",\r\n    etag: '\"3181159875584000\"',\r\n    id: \"3qtd6uscq4tsi6gc7nmmtpqlct_20200520T120000Z\",\r\n    status: \"confirmed\",\r\n    htmlLink:\r\n      \"https://www.google.com/calendar/event?eid=M3F0ZDZ1c2NxNHRzaTZnYzdubW10cHFsY3RfMjAyMDA1MjBUMTIwMDAwWiBmdWxsc3RhY2t3ZWJkZXZAY2FyZWVyZm91bmRyeS5jb20\",\r\n    created: \"2020-05-19T19:14:30.000Z\",\r\n    updated: \"2020-05-27T11:45:37.792Z\",\r\n    summary: \"React is Fun\",\r\n    description:\r\n      \"Love HTML, CSS, and JS? Want to become a cool front-end developer? \\n\\nReact is one of the most popular front-end frameworks. There is a huge number of job openings for React developers in most cities. \\n\\nJoin us in our free React training sessions and give your career a new direction. \",\r\n    location: \"Berlin, Germany\",\r\n    creator: {\r\n      email: \"fullstackwebdev@careerfoundry.com\",\r\n      self: true,\r\n    },\r\n    organizer: {\r\n      email: \"fullstackwebdev@careerfoundry.com\",\r\n      self: true,\r\n    },\r\n    start: {\r\n      dateTime: \"2020-05-20T14:00:00+02:00\",\r\n      timeZone: \"Europe/Berlin\",\r\n    },\r\n    end: {\r\n      dateTime: \"2020-05-20T15:00:00+02:00\",\r\n      timeZone: \"Europe/Berlin\",\r\n    },\r\n    recurringEventId: \"3qtd6uscq4tsi6gc7nmmtpqlct\",\r\n    originalStartTime: {\r\n      dateTime: \"2020-05-20T14:00:00+02:00\",\r\n      timeZone: \"Europe/Berlin\",\r\n    },\r\n    iCalUID: \"3qtd6uscq4tsi6gc7nmmtpqlct@google.com\",\r\n    sequence: 0,\r\n    reminders: {\r\n      useDefault: true,\r\n    },\r\n    eventType: \"default\",\r\n  },\r\n];\r\n\r\nexport { mockData };\r\n","import React, { Component } from \"react\";\r\n\r\nclass NumberOfEvents extends Component {\r\n  state = {\r\n    numberOfEvents: 32,\r\n  };\r\n\r\n  handleInputChanged = (eventCount) => {\r\n    const value = eventCount.target.value;\r\n    this.setState({\r\n      numberOfEvents: value,\r\n    });\r\n    this.props.onNumberOfEventsChange(value);\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"numberOfEvents\">\r\n        <label>Number of Events:</label>\r\n        <input\r\n          type=\"number\"\r\n          id=\"numberOfEvents input\"\r\n          value={this.state.numberOfEvents}\r\n          onChange={this.handleInputChanged}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default NumberOfEvents;\r\n","/**\r\n *\r\n * @param {*} events:\r\n * The following function should be in the “api.js” file.\r\n * This function takes an events array, then uses map to create a new array with only locations.\r\n * It will also remove all duplicates by creating another new array using the spread operator and spreading a Set.\r\n * The Set will remove all duplicates from the array.\r\n */\r\nexport const extractLocations = (events) => {\r\n  var extractLocations = events.map((event) => event.location);\r\n  var locations = [...new Set(extractLocations)];\r\n  return locations;\r\n};\r\n","import React, { Component } from \"react\";\nimport \"./App.css\";\nimport EventList from \"./EventList\";\nimport CitySearch from \"./CitySearch\";\nimport { mockData } from \"./mock-data\";\nimport NumberOfEvents from \"./NumberOfEvents\";\nimport { extractLocations } from \"./api\";\n\nclass App extends Component {\n  state = {\n    locations: extractLocations(mockData),\n    numberOfEvents: 32,\n  };\n\n  onNumberOfEventsChange = (value) => {\n    this.setState({\n      numberOfEvents: value,\n    });\n  };\n\n  render() {\n    return (\n      <div className=\"App\">\n        <CitySearch locations={this.state.locations} />\n        <NumberOfEvents onNumberOfEventsChange={this.onNumberOfEventsChange} />\n        <EventList\n          numberOfEvents={this.state.numberOfEvents}\n          events={mockData}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}